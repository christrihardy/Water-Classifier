{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to WPC documentation!","text":"<p>WPC or Water Potability Classifier is a simple Python-based Machine Learning project to predict water potability.</p>"},{"location":"#sections","title":"Sections","text":"<ul> <li>Project Description</li> <li>How to Use</li> <li>Dataset</li> <li>Conclusion</li> </ul>"},{"location":"conclusion/","title":"Conclusion","text":"<ul> <li>F1-score dari production model adalah 61%</li> <li>Model bisa digunakan dalam bentuk API atau streamlit</li> </ul>"},{"location":"conclusion/#references","title":"References","text":"<p>[1]. Artikel \"Drinking Water\"</p> <p>[2]. Artikel \"A quest for quality: Better metrics on water quality are key to corporate action on pollution\"</p> <p>[3]. \"A review of the application of machine learning in water quality evaluation\"</p> <p>[4]. \"F1 Score The Ultimate Guide\"</p>"},{"location":"dataset/","title":"Dataset","text":"<p>Dataset diambil dari Kaggle, yaitu \"Water Quality\"</p> <p>Informasi fitur yang digunakan:</p> <ul> <li>ph: Tingkat keasaman/kebasaan air</li> <li>Hardness: Tingkat kandungan kalsium dan magnesium dalam air</li> <li>Solids: Konsentrasi partikel padat terlarut dalam air</li> <li>Chloramines: Kandungan disinfektan jenis chloramine dalam air</li> <li>Sulfate: Kandungan sulfat(SO4) dalam air</li> <li>Conductivity: Tingkat keterhantaran listrik dalam air</li> <li>Organic Carbon: Kandungan kontaminan organik dalam air</li> <li>Trihalomethanes: Kandungan Trihalomethanes/THM dalam air. THM adalah hasil reaksi antara disinfektan dan zat organik dalam air</li> <li>Turbidity: Tingkat kekeruhan air</li> <li>Potability: Klasifikasi apakah air potable/bisa diminum (1) atau non-potable/tidak aman diminum (0)</li> </ul>"},{"location":"description/","title":"Project Description","text":""},{"location":"description/#1-background-problem","title":"1. Background &amp;\u00a0Problem","text":"<p>Air adalah salah kebutuhan dasar bagi kelangsungan hidup seluruh makhluk hidup, termasuk manusia. Namun seiring berkembangnya peradaban, sumber air minum bersih  pun semakin berkurang. Menurut WHO, sekitar 2 milyar orang masih menggunakan sumber air yang terkontaminasi. Setiap tahunya, diperkirakan 829.000 orang meninggal karena diare yang disebabkan oleh sumber air yang tidak aman diminum dan sanitasi yang buruk\u00b9. Oleh sebab itu, prediksi kualitas air yang akurat adalah salah satu esensi dari manajemen sumber daya air.</p> <p>Water potability merujuk pada tingkat keamanan air untuk dikonsumsi oleh manusia tanpa menyebabkan risiko kesehatan. Sedangkan potable water dapat diartikan sebagai air yang aman diminum. </p>"},{"location":"description/#2-objective-metrics","title":"2. Objective &amp;\u00a0Metrics","text":""},{"location":"description/#21-high-level-approach","title":"2.1. High Level\u00a0Approach","text":"<p>Dari permasalahan diatas  maka dibuatlah sistem klasifikasi untuk menentukan apakah suatu sumber air itu potable atau non-potable. Penulis memutuskan untuk membuat sistem klasifikasi berbasis machine learning untuk masalah ini.</p>"},{"location":"description/#22-goals-and-success","title":"2.2. Goals and\u00a0Success","text":"<p>Business Objective</p> <p>Membantu user atau perusahaan dalam mencari sumber air yang aman untuk diminum dan terhindar dari sumber air yang tidak aman. Business Metrics</p> <p>Sistem klasifikasi yang cukup akurat dalam menentukan tingkat water potability\u00a0.</p> <p>Machine Learning Solution</p> <p>Melalui machine learning, kita dapat membuat algoritma yang dapat digunakan untuk menganalisa dan mencari pola tertentu dalam suatu data untuk memprediksi informasi baru\u00b3. Dengan metode ini, kita bisa membuat suatu sistem yang dapat memprediksi tingkat water potability suatu sumber air dengan memasukkan data tingkat kontaminan dari sumber air tersebut ke algoritma machine learning tersebut.\u00a0</p> <p>Machine Learning Metrics</p> <ul> <li>Jika sistem ML memprediksi suatu sumber air potable namun ternyata non potable (false positive) maka yang meminum dapat terkena penyakit atau masalah kesehatan lain.</li> <li>Jika sistem ML memprediksi suatu sumber air non-potable namun ternyata potable (false negative) maka perusahaan atau masyarakat harus mencari lagi sumber air lain yang potable. Mencari sumber air lain dapat memakan waktu dan biaya yang tidak sedikit.</li> </ul> <p>Resiko false positive dan false negative cukup seimbang, oleh karena itu F1-score dipilih sebagai metrik.</p>"},{"location":"description/#3-project-architecture","title":"3. Project Architecture","text":"<p>General Workflow</p> <p></p> <p>Data Pipeline:</p> <p></p> <p>Preprocessing</p> <p></p> <p>Modelling</p> <p></p>"},{"location":"description/#4-expected-output","title":"4. Expected Output","text":"<ul> <li>Production Model</li> <li>API Service as backend</li> <li>Streamlit Website as frontend</li> <li>Deployment in AWS</li> </ul>"},{"location":"usage/","title":"How to Use","text":""},{"location":"usage/#requirements","title":"Requirements","text":"<ul> <li>Python</li> <li>Postman (jika ingin prediksi via API/backend)</li> <li>Docker </li> </ul>"},{"location":"usage/#1-running-the-program-locally","title":"1. Running the program locally","text":"<p>Untuk menjalankan program, pertama Clone repository Water Classifier dari Github</p> <p>Lalu, buka terminal, masuk ke direktori 'Water-Classifier' dan jalankan command dibawah ini:</p> <ul> <li>uvicorn src.water-backend:app --reload</li> <li>streamlit run water-frontend.py</li> </ul> <p>Done! Anda bisa memilih untuk prediksi via API atau Streamlit. </p> <p>Note:</p> <ul> <li>Ctrl + C untuk mematikan service.</li> </ul>"},{"location":"usage/#running-via-docker","title":"Running via Docker","text":"<p>Dengan Docker, tidak perlu mengetik command setiap kali ingin mengaktifkan program. </p> <p>Masuk ke direktori 'Water-Classifier' dan jalankan command dibawah ini via terminal:</p> <ul> <li>sudo docker compose build</li> <li>sudo docker compose up -d</li> </ul> <p>Done! Anda bisa memilih untuk prediksi via API atau Streamlit. \"sudo docker compose down\" untuk mematikan service.</p> <p>Note: </p> <ul> <li>Docker Desktop harus berjalan di background/dijalankan dulu sebelum menjalankan command diatas</li> <li>sudo docker compose down untuk mematikan service.</li> </ul>"},{"location":"usage/#2-prediction-via-api-service","title":"2. Prediction via API Service","text":"<p>Jika ingin melakukan prediksi dengan API, buka url (nama_host):8000 di aplikasi Postman </p> <p>Contoh: buka API di local, gunakan localhost:8000 </p> <p></p> <ul> <li>Pilih 'Body' dan masukkan teks format variabel prediktor persis seperti di gambar untuk melakukan predict</li> <li>Nilai angka prediktor bisa anda ubah </li> <li>Klik 'SEND'</li> <li>Hasil prediksi akan keluar, Potable atau Non-Potable</li> </ul>"},{"location":"usage/#3-prediction-via-streamlit","title":"3. Prediction via Streamlit","text":"<p>Jika anda ingin tampilan sistem yang lebih user-friendly, buka url (nama_host):8501 di web browser anda </p> <ul> <li>Masukkan nilai prediktor di kolom yang tertera</li> <li>Klik tombol Predict</li> </ul> <p></p> <ul> <li>Hasil prediksi akan keluar, apakah air tersebut Potable atau Non-potable</li> </ul>"},{"location":"usage/#4-access-the-online-service","title":"4. Access the online service","text":"<p>Jika ingin mengakses prediction service dari penulis, buka link ini: 13.213.57.173:8501</p>"},{"location":"usage/#5-retraining-model","title":"5. Retraining Model","text":"<p>Untuk retraining model, jalankan ke-3 file Python ini sesuai urutan di folder src:</p> <ol> <li>data_pipeline.py</li> <li>preprocessing.py</li> <li>modelling. py</li> </ol> <p>Output dari proses ini adalah file pickle production_model.pkl yang akan digunakan oleh backend API untuk prediksi.</p>"}]}